name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flask flask-cors requests beautifulsoup4 lxml
          
      - name: Build static site
        run: |
          # 创建静态文件结构
          mkdir -p _site
          cp -r *.html _site/
          cp -r *.css _site/
          cp -r *.js _site/
          cp -r *.ico _site/
          cp -r *.png _site/
          cp -r posts _site/
          cp -r images _site/
          
          # 创建简单的API端点处理
          python -c "
          import json
          import os
          
          # 创建API数据文件
          with open('posts/articles.json', 'r', encoding='utf-8') as f:
              articles = json.load(f)
          
          # 为每个文章创建单独的HTML文件
          for article in articles:
              article_id = article['id']
              article_html = f'''<!DOCTYPE html>
<html lang=\"zh-CN\">
<head>
  <meta charset=\"UTF-8\">
  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">
  <title>{article['title']} | 云秒搭AI周报</title>
  <link rel=\"stylesheet\" href=\"../styles.css\">
</head>
<body>
  <header class=\"site-header\">
    <div class=\"container\">
      <h1><a href=\"../index.html\">云秒搭AI周报</a></h1>
    </div>
  </header>

  <main class=\"container\">
    <article class=\"article-detail\">
      <header class=\"article-header\">
        <h1>{article['title']}</h1>
        <div class=\"article-meta\">
          <span>{article['source']}</span>
          <span>{article['date']}</span>
        </div>
        <div class=\"article-tags\">
          {''.join([f'<span class=\"article-tag\">{tag}</span>' for tag in article['tags']])}
        </div>
      </header>
      
      <div class=\"article-body\">
        {article['content']}
      </div>
      
      <div class=\"article-actions\">
        <a href=\"../index.html\">← 返回首页</a>
        <a href=\"{article['url']}\" target=\"_blank\">查看原文</a>
      </div>
    </article>
  </main>
</body>
</html>'''
              
              # 保存文章HTML文件
              os.makedirs(f'_site/articles', exist_ok=True)
              with open(f'_site/articles/{article_id}.html', 'w', encoding='utf-8') as f:
                  f.write(article_html)
          
          print('静态网站构建完成')
          "

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: _site
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
